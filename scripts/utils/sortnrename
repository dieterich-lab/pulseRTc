#!/bin/bash

# Usage:
# 	sortnrename SAMPLELIST INPUT OUTPUT TMPDIR

# Sort original BAM files in INPUT and write to OUTPUT using SAMPLELIST.
# SAMPLELIST is a txt file (space separated) with 2 columns: sample_id and sample_name
# This script assumes a certain directory structure and naming convention!
# It finds BAM files (Aligned.noS.bam) in directories (name contains sample_id) and rename
# files with sample_name to OUTPUT.

if [[ $# -ne 4 ]]; then
  echo "Usage: $0 [SAMPLELIST] [INPUT] [OUTPUT] [TMPDIR]"
  exit
fi

# DEFAULT:
# files=($2/*)
# while IFS=" " read -r sample name
#  do
#    FILEN=$(printf '%s\n' "${files[@]}" | grep $sample | grep -v mate)
#    NAME="$3/${sample}${name}.sorted.bam"
#    echo "Processing ${FILEN}/Aligned.noS.bam..."
#    samtools sort "${FILEN}/Aligned.noS.bam" -@12 -o ${NAME} -T "$4/${name}"
#    echo "Written sorted file to ${NAME}..."
#    echo "Indexing..."
#    samtools index ${NAME}
#    echo "Done!"
#  done < "$1"


# 26.09.22
# Some samples were resequenced, so we have to first sort the individual files, and merge/index them.
# Remaining samples are handled as before.

# use Picard
PICARD=/biosw/picard-tools/2.5.0/picard.jar

BATCH1=newBatchJan2022
BATCH2=newBatchFeb2022
INPUT1="/prj/hIPSC_RNA_turnover_Naarmann/${BATCH1}/workflow/mapping"
INPUT2="/prj/hIPSC_RNA_turnover_Naarmann/${BATCH2}/workflow/mapping"

files1=($INPUT1/*)
files2=($INPUT2/*)
while IFS=" " read -r sample name
 do
  FILEN1=$(printf '%s\n' "${files1[@]}" | grep $sample | grep -v mate)
  FILEN2=$(printf '%s\n' "${files2[@]}" | grep $sample | grep -v mate)
  if [ -z "$FILEN2" ]
   then
    NAME="$3/${sample}_${name}.sorted.bam"
    echo "Processing ${FILEN1}/Aligned.noS.bam..."
    samtools sort "${FILEN1}/Aligned.noS.bam" -@24 -o ${NAME} -T "$4/${name}"
    echo "Written sorted file to ${NAME}..."
    echo "Indexing..."
    samtools index ${NAME}
   else # re-sequenced
    for f in $FILEN1 $FILEN2
     do
      echo "Processing ${f}/Aligned.noS.bam..."
      idx1="$(cut -d'_' -f6 <<<$f)"
      NAME="$3/${sample}_${name}_${idx1}.bam"
      echo "Written sorted file to ${NAME} with RG tag..."
      samtools sort "${f}/Aligned.noS.bam" -@24 -T "$4/${name}_${idx1}" | samtools addreplacerg - -r ID:"${sample}_${idx1}" -r SM:"${sample}" -r PL:Illumina LB:"${sample}_${idx1}" -@24 | samtools view - -b -o ${NAME}
     done
  fi
 done < "$1"

# now merge re-sequenced files
cd $3
files=(./*)
while IFS=" " read -r sample name
 do
  FILEN=$(printf '%s\n' "${files[@]}" | grep $sample | grep -v bai)
  ARRF=($FILEN)
  NAME="${sample}_${name}.bam"
  if [ "${#ARRF[@]}" -eq 2 ]
   then
   echo "Writing merged BAM to ${NAME}..."
   java -jar ${PICARD} MergeSamFiles \
      I="${ARRF[0]}" \
      I="${ARRF[1]}" \
      O=${NAME} \
      TMP_DIR="$4" \
      USE_THREADING=true \
      CREATE_INDEX=true
  fi
 done < "$1"

echo "Done!"

# then remove intermediate files manually rm *S[1-9][0-9].bam
# otherwise markdups will not run as expected
# link these bam files (they are sorted)
